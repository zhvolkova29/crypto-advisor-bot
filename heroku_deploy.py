#!/usr/bin/env python3
"""
–í–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Heroku
"""

import asyncio
import os
import schedule
import time
from datetime import datetime
import pytz
from telegram import Bot
from telegram.error import TelegramError
from crypto_analyzer import CryptoAnalyzer

class HerokuCryptoBot:
    def __init__(self):
        self.bot = Bot(token=os.getenv('TELEGRAM_BOT_TOKEN'))
        self.analyzer = CryptoAnalyzer()
        self.chat_id = os.getenv('CHAT_ID')
        self.moscow_tz = pytz.timezone("Europe/Moscow")
    
    async def send_daily_recommendations(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–º –≤—Ä–µ–º–µ–Ω–∏
            moscow_time = datetime.now(self.moscow_tz)
            date_str = moscow_time.strftime("%d.%m.%Y")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
            message = f"üöÄ <b>–ï–ñ–ï–î–ù–ï–í–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–ê–ú</b>\n"
            message += f"üìÖ –î–∞—Ç–∞: {date_str}\n"
            message += f"üí∞ –ë—é–¥–∂–µ—Ç –Ω–∞ –¥–µ–Ω—å: $10\n"
            message += f"‚è∞ –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: {moscow_time.strftime('%H:%M')}\n\n"
            message += f"üîç <b>–¢–û–ü-3 –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–´ –î–õ–Ø –ü–û–ö–£–ü–ö–ò:</b>\n\n"
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            recommendations = self.analyzer.get_top_3_recommendations()
            
            if not recommendations:
                message += "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                await self.send_message(message)
                return
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –∞–Ω–∞–ª–∏–∑–æ–º
            for i, coin in enumerate(recommendations, 1):
                message += f"<b>{i}. {coin['name']} ({coin['symbol']})</b>\n"
                message += f"üí∞ –¶–µ–Ω–∞: ${coin['current_price']:.4f}\n"
                message += f"üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: {coin['price_change_24h']:.1f}%\n"
                message += f"üèÜ –†–∞–Ω–≥: #{coin['market_cap_rank']}\n"
                message += f"üìä –û–±—ä–µ–º: ${coin['volume_24h']/1000000:.1f}M\n"
                message += f"üíé –ö–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è: ${coin.get('market_cap', 0)/1000000:.1f}M\n\n"
                
                # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω –ø–æ–∫—É–ø–∫–∏
                reasons = []
                price = coin['current_price']
                price_change = coin['price_change_24h']
                price_change_7d = coin.get('price_change_7d', 0)
                rank = coin['market_cap_rank']
                volume = coin['volume_24h']
                market_cap = coin.get('market_cap', 0)
                
                # –ê–Ω–∞–ª–∏–∑ —Ü–µ–Ω—ã
                if price <= 0.1:
                    reasons.append(f"‚úÖ –°–≤–µ—Ä—Ö–¥–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞ - –∑–∞ $10 –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å {int(10/price)} –º–æ–Ω–µ—Ç")
                elif price <= 0.5:
                    reasons.append(f"‚úÖ –û—á–µ–Ω—å –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞ - –∑–∞ $10 –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å {int(10/price)} –º–æ–Ω–µ—Ç")
                elif price <= 1:
                    reasons.append(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞—è —Ü–µ–Ω–∞ - –∑–∞ $10 –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å {int(10/price)} –º–æ–Ω–µ—Ç")
                elif price <= 2:
                    reasons.append(f"‚úÖ –£–º–µ—Ä–µ–Ω–Ω–∞—è —Ü–µ–Ω–∞ - –∑–∞ $10 –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å {int(10/price)} –º–æ–Ω–µ—Ç")
                
                # –ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
                if price_change <= -15:
                    reasons.append(f"‚úÖ –°–∏–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞ (-{abs(price_change):.1f}%) - –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å")
                elif price_change <= -8:
                    reasons.append(f"‚úÖ –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∞–¥–µ–Ω–∏–µ (-{abs(price_change):.1f}%) - —Ö–æ—Ä–æ—à–∏–π –º–æ–º–µ–Ω—Ç")
                elif price_change <= -3:
                    reasons.append(f"‚úÖ –ù–µ–±–æ–ª—å—à–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è (-{abs(price_change):.1f}%) - –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è")
                elif price_change >= 15:
                    reasons.append(f"‚ö†Ô∏è –°–∏–ª—å–Ω—ã–π —Ä–æ—Å—Ç (+{price_change:.1f}%) - —Ç—Ä–µ–Ω–¥ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π")
                elif price_change >= 5:
                    reasons.append(f"‚úÖ –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ç—Ä–µ–Ω–¥ (+{price_change:.1f}%) - –º–æ–Ω–µ—Ç–∞ –Ω–∞–±–∏—Ä–∞–µ—Ç —Å–∏–ª—É")
                
                # –ê–Ω–∞–ª–∏–∑ —Ä–∞–Ω–≥–∞
                if rank <= 50:
                    reasons.append("üèÜ –¢–æ–ø-50 –ø—Ä–æ–µ–∫—Ç - –≤—ã—Å–æ–∫–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å")
                elif rank <= 100:
                    reasons.append("ü•à –¢–æ–ø-100 –ø—Ä–æ–µ–∫—Ç - —Ö–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å")
                elif rank <= 200:
                    reasons.append("ü•â –¢–æ–ø-200 –ø—Ä–æ–µ–∫—Ç - –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–π —Ä–æ—Å—Ç")
                elif rank <= 500:
                    reasons.append("üíé –¢–æ–ø-500 –ø—Ä–æ–µ–∫—Ç - –≤—ã—Å–æ–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª")
                
                # –ê–Ω–∞–ª–∏–∑ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏
                if volume >= 100000000:
                    reasons.append("üíß –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å")
                elif volume >= 50000000:
                    reasons.append("üåä –í—ã—Å–æ–∫–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å")
                elif volume >= 10000000:
                    reasons.append("üí¶ –•–æ—Ä–æ—à–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å")
                elif volume >= 5000000:
                    reasons.append("üíß –£–º–µ—Ä–µ–Ω–Ω–∞—è –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-3 –ø—Ä–∏—á–∏–Ω—ã
                if reasons:
                    message += f"ü§î –ü–æ—á–µ–º—É –∫—É–ø–∏—Ç—å: {', '.join(reasons[:3])}\n"
                else:
                    message += "ü§î –ü–æ—á–µ–º—É –∫—É–ø–∏—Ç—å: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏\n"
                
                message += "\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ —Å–æ–≤–µ—Ç—ã
            message += "üí° <b>–û–ë–©–ò–ï –°–û–í–ï–¢–´:</b>\n"
            message += "‚Ä¢ –ù–µ –≤–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –ø–æ—Ç–µ—Ä—è—Ç—å\n"
            message += "‚Ä¢ –î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–ª—å\n"
            message += "‚Ä¢ –ü—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π\n"
            message += "‚Ä¢ –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ —ç—Ç–æ –∫–∞–∫ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—é\n\n"
            
            message += "‚ö†Ô∏è <b>–û–¢–ö–ê–ó –û–¢ –û–¢–í–ï–¢–°–¢–í–ï–ù–ù–û–°–¢–ò:</b>\n"
            message += "–≠—Ç–æ –Ω–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–æ–≤–µ—Ç. –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ."
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await self.send_message(message)
            
        except Exception as e:
            error_message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {str(e)}"
            await self.send_message(error_message)
    
    async def send_message(self, message: str):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        try:
            await self.bot.send_message(
                chat_id=self.chat_id,
                text=message,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {datetime.now()}")
        except TelegramError as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    async def send_startup_message(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ"""
        message = "ü§ñ <b>–ö–†–ò–ü–¢–û-–°–û–í–ï–¢–ù–ò–ö –ó–ê–ü–£–©–ï–ù –ù–ê HEROKU!</b>\n\n"
        message += "–ë–æ—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7 –∏ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ "
        message += "–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00 –ø–æ –º–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        message += "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ\n"
        message += "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
        message += "‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n"
        message += "‚úÖ –ê–Ω–∞–ª–∏–∑ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
        
        await self.send_message(message)
    
    def schedule_daily_notifications(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        schedule.every().day.at("10:00").do(
            lambda: asyncio.run(self.send_daily_recommendations())
        )
        print("–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ 10:00")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not os.getenv('TELEGRAM_BOT_TOKEN') or not os.getenv('CHAT_ID'):
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ CHAT_ID")
        return
    
    bot = HerokuCryptoBot()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    await bot.send_startup_message()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    bot.schedule_daily_notifications()
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Heroku! –û–∂–∏–¥–∞–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    print("üìÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 10:00")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    while True:
        schedule.run_pending()
        await asyncio.sleep(60)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

if __name__ == "__main__":
    asyncio.run(main())

